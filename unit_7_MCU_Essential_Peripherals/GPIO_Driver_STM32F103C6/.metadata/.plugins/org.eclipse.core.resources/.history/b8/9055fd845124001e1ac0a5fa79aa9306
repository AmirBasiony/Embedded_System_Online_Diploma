/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include "STM32F103x6.h"
#include "STM32F103C6_GPIO.h".h"

void Clock_Init()
{
	//Enable Init Clock GPIOA
	RCC_GPIOA_CLK_EN() ;

	//Enable Init Clock GPIOB
	RCC_GPIOB_CLK_EN() ;
}

void GPIO_Init()
{

	//PA1 (Floating/High-Z) Input
	GPIO_PINConfig_t Config_PA1;
	Config_PA1.GPIO_PinNumber = GPIO_PIN_1;
	Config_PA1.GPIO_PinMode   = GPIO_MODE_Input_FLO;
	MCAL_GPIO_Init(&GPIOA, &Config_PA1);

	//PB1 Push_Pull Output / Output max speed 10 MHz.
	GPIO_PINConfig_t Config_PB1;
	Config_PB1.GPIO_PinNumber = GPIO_PIN_1;
	Config_PB.GPIO_PinMode   = GPIO_MODE_Output_PP;
	Config_PB1.GPIO_PinMode   = GPIO_MAX_Speed_10;
	MCAL_GPIO_Init(&GPIOB, &Config_PB1);

	//PA13 (Floating/High-Z) Input
	//00: Input mode (reset state)
	//01: Floating input (reset state)
	GPIO_PINConfig_t Config_PA13;
	Config_PA13.GPIO_PinNumber = GPIO_PIN_13;
	Config_PA13.GPIO_PinMode   = GPIO_MODE_Input_FLO;
	MCAL_GPIO_Init(&GPIOA, &Config_PA13);

	//PB13 Push_Pull Output / Output max speed 10 MHz.
	GPIO_PINConfig_t Config_PB13;
	Config_PB13.GPIO_PinNumber = GPIO_PIN_13;
	Config_PB13.GPIO_PinMode   = GPIO_MODE_Output_PP;
	Config_PB13.GPIO_PinMode   = GPIO_MAX_Speed_10;
	MCAL_GPIO_Init(GPIOB, &Config_PB13);

}

void delay(unsigned int x)
{
	unsigned int i,j;
	for(i=0;i<x;i++)
		for(j=0;j<255;j++);
}
int main(void)
{
	Clock_Init();
	GPIO_Init();


	while(1)
	{
		// PA1 Bottom >> Pull_UP_R
		if( MCAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) == 0) //Press
		{
			MCAL_GPIO_TogglePin(GPIOB, GPIO_PIN_1); //Toggle LED
			while( (MCAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) == 0);//Single Press
		}
		// PA13 Bottom >> Pull_Down_R
		if( MCAL_GPIO_ReadPin(GPIOA, GPIO_PIN_13) == 1) // Multi Pressing
		{
			MCAL_GPIO_TogglePin(GPIOB, GPIO_PIN_13);//Toggle LED
		}

		delay(1);
	}
}


